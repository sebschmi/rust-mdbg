#!/bin/bash
# multi-k rust-mdbg 
# requirements: seqtk
#arguments: [reads.fq] [prefix] [threads]


if ! command -v seqtk &> /dev/null
then
	echo "please install seqtk, it is a prerequisite for this script"
	exit
fi

if [ "$#" -lt 3 ]
then
	echo "usage: multik <reads.[fa|fq][.gz]> <prefix> <nb_threads> [restart_from]"
    exit
fi

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

density=0.003
l=12

reads=$1
prefix=$2
threads=$3
restart_from=$4
max_k=$5

# determine max read length
# (in order to fix max k)
avg_readlen=$(seqtk seq -A $reads |head -n 10000 | awk '!/^>/ {print length}'  | awk '{sum+=$1} END {print int(sum/NR)}')

if [ -z "$max_k" ]
then
    max_k=$(LC_NUMERIC="en_US.UTF-8" printf "%.0f" $(echo 0.95*$avg_readlen*$density | bc))
fi

set -e # abort if any program fails
echo "avg readlen: $avg_readlen, max k: $max_k"

function assemble {
	cur_reads=$1
	k=$2
	l=$3
	d=$4
	tprefix=$5
	threads=$6
	DIR=$7
	echo "assembly with k=$k"
	\time cargo run --manifest-path $DIR/../Cargo.toml --release $cur_reads -k $k -l $l --density $d --minabund 2 --threads $threads --prefix $tprefix --bf
	\time $DIR/magic_simplify $tprefix

}


if [ -z "$restart_from" ]
then
	# init with just the reads at first
	k=10
	tprefix=$prefix-k10
	assemble $reads $k $l $density $tprefix $threads $DIR
	start_k=15
else
	start_k=$restart_from
	tprefix=$prefix-k$((start_k-5))
fi

last_k=5
for k in $(seq $start_k 5 $max_k)
do
    zcat -f $tprefix.msimpl.fa $tprefix.msimpl.fa |seqtk seq -A -L 100000 > $prefix.multik_reads.fa
    zcat -f $reads  |seqtk seq -A >> $prefix.multik_reads.fa
    tprefix=$prefix-k$k
    assemble $prefix.multik_reads.fa $k $l $density $tprefix $threads $DIR
    last_k=$k
    rm -f *.sequences
done

mv $tprefix.msimpl.fa $prefix-final.msimpl.fa
mv $tprefix.msimpl.gfa $prefix-final.msimpl.gfa
mv $tprefix.gfa $prefix-final.gfa
echo "assembly done, final results (k=$last_k) are in: $prefix-final.msimpl.fa"
